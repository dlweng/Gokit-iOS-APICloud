<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,initial-scale=1.0,width=device-width"/>
    <meta name="format-detection" content="telephone=no,email=no,date=no,address=no">
    <link rel="stylesheet" href="../../css/api.css">
    <style>
		body{ display: table; text-align: center; width: 100%; }
		.hint{ display: table-cell;  vertical-align: middle;  }
		.arcProgress{ position: fixed; left:0; width: 100%; top: 25%; color: #f2d736; }
    </style>
</head>
<body>
	<div class="arcProgress">0%</div>
	<div class="hint">搜索并连接设备</div>
</body>
<script type="text/javascript" src="../../script/api.js"></script>
<script type="text/javascript" src="../../script/base.js"></script>
<script type="text/javascript">
	var hasSuccess = false;
	apiready = function(){	
		fnSetDeviceOnboarding( api.pageParam.data );
	}
	
	function fnSetDeviceOnboarding( obj ){
		hasSuccess = false;
		localStorage.setItem( 'searchDevice', api.winName );
		var arcProgress = api.require('arcProgress');	
		var hint = $api.dom('.hint');
		arcProgress.open({
		    type: 'annular',
		    centerX: api.frameWidth / 2,
		    centerY: (api.winHeight - $api.getStorage('pageY')) / 4,
		    radius: api.frameWidth / 4,
		    loopWidth: 6,
		    bgColor: '#fcfcfc',
		    pgColor: '#f2d736',
		    fixedOn: api.frameName
		},function(ret,err){
	    	setValue( { id: ret.id, value: 0 } )
		});
		function setValue( obj ){
		    if( obj.value >= 100 ){ 
		    	//msg: '配置超时'
		    }else{
			    setTimeout(function(){
					if( ! hasSuccess ){
			       	 	arcProgress.setValue({
				            id: obj.id,
				            value: ++obj.value
				        });
				        setValue( obj );
				        //设置不同搜索时段时候出现的文字
				        if ( obj.value > 0&&obj.value < 13.3 ){
				        	hint.innerHTML = '正在搜索设备...';
				        }
				        else if ( obj.value >= 13.3&& obj.value <16.6 ) {
				        	hint.innerHTML = '已搜索到设备';				    
				        }
				        else{
				        	hint.innerHTML = '正在尝试与设备连接';
				        }
				        $api.dom( '.arcProgress' ).innerHTML = obj.value+'%';
					}
			    },600);
		    }
		}
		
		localStorage.removeItem( 'hasConfigure' );
		api.execScript({
		    name: 'root',
		    script: 'fnSetDeviceOnboarding('+JSON.stringify({
				winName: api.winName,
				frameName: api.frameName,
				ssid: obj.selectWiFi,
				key: obj.password,
				softAPSSIDPrefix: obj.softAPSSIDPrefix || 'XPG-GAgent',
				mode: obj.mode
			})+')'
		});
	}
	
	function receive_fnSetDeviceOnboarding( ret, err){
		//alert(JSON.stringify(ret));
		//alert(JSON.stringify(err));
		if( ret ){
			api.execScript({
			    name: 'win_deviceList',
			    frameName: 'frm_deviceList',
			    script: 'fnInit()'
			});
			hasSuccess = true;
			fnPopup({
				msg: '配置成功'
		 	}, function(){
				localStorage.removeItem( 'searchDevice' );
				api.closeToWin({
				    name: 'win_deviceList'
				});	 	
		 	});
		}
		else if( err.errCode==8021 ){
			fnPopup({
				msg: '配置信息发送失败'
			}, function(){
				localStorage.removeItem( 'searchDevice' );
				fnJumpWin({name: 'connectionDevice', path: '/main' });
			});
		}
		else if( err.errCode != 8022 ){
			fnPopup({
				msg: '配置超时'
			}, function(){
				localStorage.removeItem( 'searchDevice' );
				fnJumpWin({name: 'connectionDevice', path: '/main' });
			});
		}
	}
</script>
</html>